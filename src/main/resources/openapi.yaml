
  openapi: 3.0.3
  info:
    title: Task Management API
    version: 1.0.0
    description: API for managing tasks and user authentication
  paths:
    /api/auth/register:
      post:
        summary: Register a new user
        description: Creates a new user account and returns a JWT token
        tags:
          - Authentication
        requestBody:
          required: true
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Username of the new user
                  password:
                    type: string
                    description: Password of the new user
                  email:
                    type: string
                    description: Email of the new user
                required:
                  - username
                  - password
                  - email
        responses:
          '200':
            description: User registered successfully, returns JWT token
            content:
              text/plain:
                schema:
                  type: string
                  example: eyJhbGciOiJIUzI1NiJ9...
          '400':
            description: Email or username already exists
            content:
              text/plain:
                schema:
                  type: string
                  example: Email already exists
    /api/auth/login:
      post:
        summary: Login user
        description: Authenticates user and returns a JWT token
        tags:
          - Authentication
        requestBody:
          required: true
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Username of the user
                  password:
                    type: string
                    description: Password of the user
                required:
                  - username
                  - password
        responses:
          '200':
            description: Login successful, returns JWT token
            content:
              text/plain:
                schema:
                  type: string
                  example: eyJhbGciOiJIUzI1NiJ9...
          '401':
            description: Invalid credentials
            content:
              text/plain:
                schema:
                  type: string
                  example: Invalid credentials
    /api/tasks:
      get:
        summary: Get all tasks
        description: Retrieves all tasks for the authenticated user
        tags:
          - Task Management
        parameters:
          - in: header
            name: Authorization
            schema:
              type: string
            required: true
            description: JWT token (Bearer <token>)
        responses:
          '200':
            description: List of tasks retrieved successfully
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Task'
          '403':
            description: Invalid or missing JWT token
            content:
              text/plain:
                schema:
                  type: string
                  example: Forbidden
          '404':
            description: User not found
            content:
              text/plain:
                schema:
                  type: string
                  example: User not found
      post:
        summary: Create a new task
        description: Creates a new task for the authenticated user
        tags:
          - Task Management
        parameters:
          - in: header
            name: Authorization
            schema:
              type: string
            required: true
            description: JWT token (Bearer <token>)
        requestBody:
          required: true
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: Task title
                  description:
                    type: string
                    description: Task description
                required:
                  - title
                  - description
        responses:
          '200':
            description: Task created successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Task'
          '400':
            description: Invalid input
            content:
              text/plain:
                schema:
                  type: string
                  example: Invalid input
          '403':
            description: Invalid or missing JWT token
            content:
              text/plain:
                schema:
                  type: string
                  example: Forbidden
          '404':
            description: User not found
            content:
              text/plain:
                schema:
                  type: string
                  example: User not found
    /api/tasks/{id}:
      put:
        summary: Update a task
        description: Updates an existing task by ID
        tags:
          - Task Management
        parameters:
          - in: path
            name: id
            schema:
              type: integer
              format: int64
            required: true
            description: Task ID (must be a valid number)
          - in: header
            name: Authorization
            schema:
              type: string
            required: true
            description: JWT token (Bearer <token>)
        requestBody:
          required: true
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: Task title
                  description:
                    type: string
                    description: Task description
                  completed:
                    type: boolean
                    description: Task completion status
                required:
                  - title
                  - description
                  - completed
        responses:
          '200':
            description: Task updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Task'
          '400':
            description: Invalid input or ID format
            content:
              text/plain:
                schema:
                  type: string
                  example: Invalid task ID format
          '403':
            description: Invalid or missing JWT token
            content:
              text/plain:
                schema:
                  type: string
                  example: Forbidden
          '404':
            description: Task or user not found
            content:
              text/plain:
                schema:
                  type: string
                  example: Task or user not found
      delete:
        summary: Delete a task
        description: Deletes a task by ID
        tags:
          - Task Management
        parameters:
          - in: path
            name: id
            schema:
              type: integer
              format: int64
            required: true
            description: Task ID (must be a valid number)
          - in: header
            name: Authorization
            schema:
              type: string
            required: true
            description: JWT token (Bearer <token>)
        responses:
          '200':
            description: Task deleted successfully
            content:
              application/json:
                schema:
                  type: object
          '400':
            description: Invalid ID format
            content:
              text/plain:
                schema:
                  type: string
                  example: Invalid task ID format
          '403':
            description: Invalid or missing JWT token
            content:
              text/plain:
                schema:
                  type: string
                  example: Forbidden
          '404':
            description: Task or user not found
            content:
              text/plain:
                schema:
                  type: string
                  example: Task or user not found
  components:
    schemas:
      Task:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: Task ID
          title:
            type: string
            description: Task title
          description:
            type: string
            description: Task description
          completed:
            type: boolean
            description: Task completion status
        required:
          - id
          - title
          - description
          - completed
